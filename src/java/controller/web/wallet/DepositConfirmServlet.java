package controller.web.wallet;

import dao.DepositRequestDAO;
import model.User;
import model.DepositRequest;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import java.io.IOException;
import java.math.BigDecimal;

/**
 * ‚úÖ FIXED: Servlet x·ª≠ l√Ω x√°c nh·∫≠n ƒë√£ chuy·ªÉn kho·∫£n
 * - Ch·ªâ t·∫°o DepositRequest khi user x√°c nh·∫≠n ƒë√£ chuy·ªÉn ti·ªÅn
 * - L·∫•y th√¥ng tin t·ª´ session thay v√¨ t·∫°o m·ªõi
 */
@WebServlet("/wallet/confirm-deposit")
public class DepositConfirmServlet extends HttpServlet {
    
    private DepositRequestDAO depositRequestDAO;
    
    @Override
    public void init() throws ServletException {
        depositRequestDAO = new DepositRequestDAO();
        System.out.println("‚úÖ DepositConfirmServlet initialized");
    }
    
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {
        
        System.out.println("\nüî• === DEPOSIT CONFIRM SERVLET - doPost ===");
        
        // Ki·ªÉm tra ƒëƒÉng nh·∫≠p
        HttpSession session = request.getSession();
        User user = (User) session.getAttribute("user");
        
        if (user == null) {
            response.sendRedirect(request.getContextPath() + "/view/jsp/home/login.jsp");
            return;
        }
        
        try {
            // ‚úÖ L·∫§Y TH√îNG TIN T·ª™ SESSION (ƒë√£ l∆∞u khi t·∫°o QR)
            BigDecimal amount = (BigDecimal) session.getAttribute("pendingDeposit_amount");
            String transactionId = (String) session.getAttribute("pendingDeposit_transactionId");
            Integer walletId = (Integer) session.getAttribute("pendingDeposit_walletId");
            
            if (amount == null || transactionId == null || walletId == null) {
                session.setAttribute("errorMessage", "Phi√™n giao d·ªãch ƒë√£ h·∫øt h·∫°n. Vui l√≤ng t·∫°o y√™u c·∫ßu n·∫°p ti·ªÅn m·ªõi.");
                response.sendRedirect(request.getContextPath() + "/wallet");
                return;
            }
            
            // L·∫•y ghi ch√∫ t·ª´ user (n·∫øu c√≥)
            String userNote = request.getParameter("userNote");
            if (userNote == null) {
                userNote = "";
            }
            
            System.out.println("‚úÖ Creating deposit request from session:");
            System.out.println("   - User: " + user.getEmail() + " (ID: " + user.getUserId() + ")");
            System.out.println("   - Amount: " + amount);
            System.out.println("   - Transaction ID: " + transactionId);
            System.out.println("   - Wallet ID: " + walletId);
            System.out.println("   - User note: " + userNote);
            
            // ‚úÖ T·∫†O DEPOSIT REQUEST
            DepositRequest depositRequest = new DepositRequest(walletId, user.getUserId(), amount);
            depositRequest.setGatewayTransactionId(transactionId);
            depositRequest.setGatewayName("vietqr");
            
            int depositId = depositRequestDAO.createDepositRequest(depositRequest);
            
            if (depositId > 0) {
                // ‚úÖ X√ìA TH√îNG TIN KH·ªéI SESSION SAU KHI T·∫†O TH√ÄNH C√îNG
                session.removeAttribute("pendingDeposit_amount");
                session.removeAttribute("pendingDeposit_transactionId");
                session.removeAttribute("pendingDeposit_walletId");
                
                // C·∫≠p nh·∫≠t admin note v·ªõi th√¥ng tin x√°c nh·∫≠n
                String adminNote = String.format("Kh√°ch h√†ng x√°c nh·∫≠n ƒë√£ chuy·ªÉn kho·∫£n l√∫c %s. Ghi ch√∫: %s", 
                    java.time.LocalDateTime.now().toString(), userNote);
                
                boolean noteUpdated = depositRequestDAO.updateDepositRequestStatus(
                    depositId, "pending", null, adminNote, null);
                
                if (noteUpdated) {
                    session.setAttribute("successMessage", 
                        "ƒê√£ x√°c nh·∫≠n chuy·ªÉn kho·∫£n th√†nh c√¥ng! Y√™u c·∫ßu n·∫°p ti·ªÅn ƒëang ƒë∆∞·ª£c x·ª≠ l√Ω b·ªüi nh√¢n vi√™n. M√£ giao d·ªãch: " + transactionId);
                    
                    System.out.println("‚úÖ Deposit request created and confirmed successfully:");
                    System.out.println("   - Deposit ID: " + depositId);
                    System.out.println("   - Transaction ID: " + transactionId);
                    System.out.println("   - Status: pending (waiting for staff approval)");
                } else {
                    session.setAttribute("warningMessage", 
                        "Y√™u c·∫ßu n·∫°p ti·ªÅn ƒë√£ ƒë∆∞·ª£c t·∫°o nh∆∞ng kh√¥ng th·ªÉ c·∫≠p nh·∫≠t ghi ch√∫. M√£ giao d·ªãch: " + transactionId);
                }
                
            } else {
                session.setAttribute("errorMessage", "Kh√¥ng th·ªÉ t·∫°o y√™u c·∫ßu n·∫°p ti·ªÅn. Vui l√≤ng th·ª≠ l·∫°i.");
                System.err.println("‚ùå Failed to create deposit request");
            }
            
        } catch (Exception e) {
            System.err.println("‚ùå Error in DepositConfirmServlet: " + e.getMessage());
            e.printStackTrace();
            
            session.setAttribute("errorMessage", "C√≥ l·ªói x·∫£y ra khi x·ª≠ l√Ω y√™u c·∫ßu x√°c nh·∫≠n.");
        }
        
        response.sendRedirect(request.getContextPath() + "/wallet");
    }
    
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {
        
        // Kh√¥ng cho ph√©p GET, redirect v·ªÅ trang v√≠
        response.sendRedirect(request.getContextPath() + "/wallet");
    }
}